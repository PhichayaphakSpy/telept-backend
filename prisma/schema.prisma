generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  userId     Int      @id @default(sequence())
  firstName  String
  lastName   String
  nationalId String   @unique
  birthDate  DateTime
  sex        Sex
  weight     Decimal
  height     Decimal
  role       Role     @default(USER)
  doctasks   Task[]   @relation("doctorTasks")
  tasks      Task[]   @relation("assignedTasks")
}

model Pose {
  id           Int            @id @default(sequence())
  name         String
  videoLink    String
  steps        String[]
  DoctorGraded DoctorGraded[]
  RepSec       RepSec[]
  Session      Session[]
  Task         Task[]         @relation("taskPoses")
}

model RepSec {
  id     Int    @id @default(sequence())
  poseId Int
  repeat Int
  long   Int
  Pose   Pose   @relation(fields: [poseId], references: [id])
  Task   Task[] @relation("RepSec")
}

model Criteria {
  id      Int  @id @default(sequence())
  taskId  Int  @unique
  overAll Int
  angle   Int
  time    Int
  Task    Task @relation(fields: [taskId], references: [id])
}

model Task {
  id             Int            @id @default(sequence())
  taskName       String
  start_at       DateTime
  end_at         DateTime
  patientId      Int
  doctorId       Int
  sessionsperday String[]
  Criteria       Criteria?
  DoctorGraded   DoctorGraded[]
  Session        Session[]
  doctor         User           @relation("doctorTasks", fields: [doctorId], references: [userId])
  patient        User           @relation("assignedTasks", fields: [patientId], references: [userId])
  RepSec         RepSec[]       @relation("RepSec")
  Pose           Pose[]         @relation("taskPoses")
}

model Session {
  id          Int      @id @default(sequence())
  taskId      Int
  poseId      Int
  create_at   DateTime @default(now())
  session     String
  videoBone   String?
  videoNormal String?
  score       Decimal?
  pose        Pose     @relation(fields: [poseId], references: [id])
  task        Task     @relation(fields: [taskId], references: [id])

  @@unique([taskId, poseId, create_at])
}

model DoctorGraded {
  id      Int      @id @default(sequence(maxValue: 2147483647))
  date    DateTime
  taskId  Int
  poseId  Int
  comment String
  overAll Decimal
  angle   Decimal
  time    Decimal
  pose    Pose     @relation(fields: [poseId], references: [id])
  task    Task     @relation(fields: [taskId], references: [id])
}

enum Sex {
  FEMALE
  MALE
}

enum Role {
  USER
  DOCTOR
  THERAPIST
}
