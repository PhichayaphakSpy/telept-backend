generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  userId     Int      @id @default(sequence())
  firstName  String
  lastName   String
  nationalId String   @unique
  birthDate  DateTime
  sex        Sex
  weight     Decimal
  height     Decimal
  role       Role     @default(USER)
  doctasks   Task[]   @relation("doctorTasks")
  tasks      Task[]   @relation("assignedTasks")
}

model Pose {
  id        Int       @id @default(sequence())
  name      String
  videoLink String
  steps     String[]
  Session   Session[]
  Task      Task[]    @relation("taskPoses")
  RepSec    RepSec[]
}

model RepSec {
  id     Int    @id @default(sequence())
  poseId Int
  repeat Int
  long   Int
  Task   Task[] @relation("RepSec")
  Pose   Pose   @relation(fields: [poseId], references: [id])
}

model Criteria {
  id      Int  @id @default(sequence())
  taskId  Int  @unique
  overAll Int
  angle   Int
  time    Int
  Task    Task @relation(fields: [taskId], references: [id])
}

model Task {
  id             Int        @id @default(sequence())
  taskName       String
  sessionsperday String[]
  start_at       DateTime
  end_at         DateTime
  patientId      Int
  doctorId       Int
  Session        Session[]
  doctor         User       @relation("doctorTasks", fields: [doctorId], references: [userId])
  patient        User       @relation("assignedTasks", fields: [patientId], references: [userId])
  Pose           Pose[]     @relation("taskPoses")
  RepSec         RepSec[]   @relation("RepSec")
  Criteria       Criteria[]
}

model Session {
  id        Int      @id @default(sequence())
  taskId    Int
  poseId    Int
  score     Int?
  create_at DateTime @default(now())
  pose      Pose     @relation(fields: [poseId], references: [id])
  task      Task     @relation(fields: [taskId], references: [id])

  @@unique([taskId, poseId, create_at])
}

enum Sex {
  FEMALE
  MALE
}

enum Role {
  USER
  DOCTOR
  THERAPIST
}